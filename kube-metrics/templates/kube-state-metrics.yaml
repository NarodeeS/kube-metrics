{{- $module := index .Values "kube-state-metrics" -}}
{{- $module_name := "kube-state-metrics" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: {{ $module_name }}
    app.kubernetes.io/name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
  name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: {{ $module_name }}
        app.kubernetes.io/name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
    spec:
      serviceAccountName: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}-account
      automountServiceAccountToken: true
      containers:
        - name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
          image: {{ $module.image.repository }}:{{ $module.image.tag }}
          imagePullPolicy: {{ $module.image.pullPolicy }}
          args:
            - --metric-labels-allowlist=pods=[app.kubernetes.io/component],deployments=[app.kubernetes.io/component]
            - >-
              --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          resources:
            {{- $module.resources | toYaml | nindent 12 }}          
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          ports:
          - containerPort: 8080
            name: http-metrics
          - containerPort: 8081
            name: telemetry
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: {{ $module_name }}
    app.kubernetes.io/name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
  name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
  namespace: {{ .Values.namespace }}
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
  ports:
    - name: http-metrics
      port: 8080
      targetPort: http-metrics
    - name: telemetry
      port: 8081
      targetPort: telemetry
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: prometheus
    job: kube-state-metrics
spec:
  jobLabel: job
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ $module_name }}
      app.kubernetes.io/name: {{ include "kube-metrics.fullname" . }}-{{ $module_name }}
  namespaceSelector: 
    matchNames: [{{ .Values.namespace | quote }}]
  endpoints:
    - port: http-metrics
